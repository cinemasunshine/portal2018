# CircleCI configuration

version: 2.1

executors:
  my_executor:
    docker:
      - image: circleci/php:7.2

commands:
  update_php:
    description: "DockerイメージのPHPアップデート"
    steps:
      - setup_remote_docker
      - run:
          name: install redis extension
          command: |
            sudo pecl install -o -f redis
            sudo rm -rf /tmp/pear
            sudo docker-php-ext-enable redis

jobs:
  build_development:
    environment:
      ZIP_FILE: development_app.zip
    working_directory: ~/workspace
    executor: my_executor

    steps:
      - checkout
      - update_php

      - restore_cache:
          keys:
            - composer-dev-{{ checksum "composer.lock" }}
            - composer-

      - run:
          name: Composer install (with require-dev)
          command: |
            composer config http-basic.m-p.backlog.jp $BACKLOG_USER $BACKLOG_PASSWORD
            composer install --dev -n --prefer-dist

      - save_cache:
          key: composer-dev-{{ checksum "composer.lock" }}
          paths:
            - ./vendor

      - run:
          name: ZIP archive
          command: zip -r $ZIP_FILE . -x \*.git\* \*.circleci\* \*docker\* \*report\* .gitignore composer.\* docker-compose.yml phpcs.xml phpstan.neon .editorconfig \*.env \*.user.ini public/sample.Web.config

      - persist_to_workspace:
          root: .
          paths:
            - .

  analysis:
    working_directory: ~/workspace

    executor: my_executor

    steps:
      - attach_workspace:
          at: .

      - run:
          name: PHP CodeSniffer
          command: composer phpcs

      - run:
          name: PHPStan
          command: composer phpstan > ./report/phpstan_result.txt

      - store_artifacts:
          path: ./report

  deploy_to_dev:
    steps:
      - run: echo todo

  deploy_to_test:
    environment:
      ZIP_FILE: development_app.zip
    working_directory: ~/workspace
    executor: my_executor

    steps:
      - attach_workspace:
          at: .

      - run:
          name: Deploy to Azure
          command: curl -X POST https://$TEST_AAS_USER:$TEST_AAS_PASSWORD@$TEST_AAS.scm.azurewebsites.net/api/zipdeploy -T $ZIP_FILE

workflows:
  version: 2

  deploy_development:
    jobs:
      - build_development:
          filters:
            branches:
              ignore: master
      - analysis:
          requires:
            - build_development
      - deploy_to_dev_approval:
          type: approval
          requires:
            # - analysis
            - build_development
      - deploy_to_dev:
          requires:
            - deploy_to_dev_approval
      - deploy_to_test_approval:
          type: approval
          requires:
            # - analysis
            - build_development
      - deploy_to_test:
          requires:
            - deploy_to_test_approval
